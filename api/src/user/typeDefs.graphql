# import Query.users, Query.user, Query.usersConnection, Mutation.deleteUser, UserUpdateInput from "../generated/prisma.graphql"
# import Employment, Query.employments, Query.employmentsConnection, Mutation.deleteEmployment from "../generated/prisma.graphql"
# import Mutation.signupByInvite, Mutation.signup, Mutation.login, Mutation.changePassword, Mutation.updateCurrentUser, Mutation.triggerPasswordReset, Mutation.passwordReset, Mutation.confirmEmail, UserIdPayload from "../../../node_modules/graphql-authentication/schema.graphql"

type Query {
  currentUser: User
}

type Mutation {
  inviteUser(data: InviteUserInput): UserIdPayload!
}

input InviteUserInput {
  email: String!
  restaurantId: ID!
  permission: RestaurantPermission!
}

type User {
  id: ID!
  email: String!
  name: String!
  inviteAccepted: Boolean!
  emailConfirmed: Boolean!
  deletedAt: DateTime
  lastLogin: DateTime
  joinedAt: DateTime!
  isSuper: Boolean!
  employments(
    where: EmploymentWhereInput
    orderBy: EmploymentOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Employment!]
}
