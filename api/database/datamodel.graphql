enum RestaurantPermission {
  EMPLOYEE
  ADMIN
  OWNER
}

enum CardSubitemTypes {
  ADDITION
  VARIANT
}

enum OrderStatus {
  IN_PROGRESS
  COMPLETED
  CANCELLED
  PICKED_UP
}

type Organization {
  id: ID! @unique
  name: String!
  slug: String! @unique
  visible: Boolean @default(value: "false")
  imageUrl: String
  restaurants: [Restaurant!]! @relation(name: "RestaurantOrganization")
}

type Restaurant {
  id: ID! @unique
  organization: Organization @relation(name: "RestaurantOrganization")
  name: String!
  slug: String! @unique
  visible: Boolean @default(value: "false")
  imageUrl: String
  employments: [Employment!]!
    @relation(name: "RestaurantEmployment", onDelete: CASCADE)
  activeCard: Card @relation(name: "RestaurantActiveCard", onDelete: CASCADE)
  cards: [Card!]! @relation(name: "RestaurantCards", onDelete: CASCADE)
}

type Employment {
  id: ID! @unique
  user: User! @relation(name: "EmploymentToUser")
  restaurant: Restaurant! @relation(name: "RestaurantEmployment")
  permission: RestaurantPermission!
}

type User {
  id: ID! @unique
  email: String! @unique
  password: String!
  name: String!
  inviteToken: String
  inviteAccepted: Boolean! @default(value: "true")
  emailConfirmed: Boolean! @default(value: "true")
  emailConfirmToken: String
  resetToken: String
  resetExpires: DateTime
  deletedAt: DateTime
  lastLogin: DateTime
  joinedAt: DateTime!
  isSuper: Boolean! @default(value: "false")
  employments: [Employment!]!
    @relation(name: "EmploymentToUser", onDelete: CASCADE)
}

type Card {
  id: ID! @unique
  name: String!
  restaurant: Restaurant! @relation(name: "RestaurantCards")
  activeRestaurant: Restaurant @relation(name: "RestaurantActiveCard")
  categories: [CardCategory!]!
    @relation(name: "CardToCardCategory", onDelete: CASCADE)
}

type CardCategory {
  id: ID! @unique
  name: String!
  ordering: Int!
  description: String!
  items: [CardItem!]!
    @relation(name: "CardCategoryToCardItem", onDelete: CASCADE)
}

type CardItem {
  id: ID! @unique
  name: String!
  description: String!
  ordering: Int!
  price: Float!
  subitems: [CardSubitem!]!
    @relation(name: "CardItemSubitems", onDelete: CASCADE)
}

type CardSubitem {
  id: ID! @unique
  type: CardSubitemTypes!
  name: String!
  ordering: Int!
  price: Float!
}

type Order {
  id: ID! @unique
  number: Int
  status: OrderStatus! @default(value: "IN_PROGRESS")
  items: [OrderItem!]! @relation(name: "OrderToOrderItem", onDelete: CASCADE)
  tip: Float!
}

type OrderItem {
  id: ID! @unique
  cardItem: CardItem!
  subitems: [CardSubitem!]!
  restaurant: Restaurant!
  subtotal: Float!
  completedAt: DateTime
}
